; {{ ansible_managed }}
{# This will be used to remember which sections were generated already #}
{% set _managed_sections = [] -%}


{%- macro value_pairs(values, ignore=[]) %}
{#- Generate option=value mappings from a dict -#}
{%- for option, value
   in values.items() %}
{% if option in ignore %}
  {#- Ignored keys -#}
{% elif value in [True, False] %}
  {#- Bools need special handling, anything else goes in as-is -#}
{{ option }}={{ 'true' if value else 'false' }}
{% else %}
{{ option }}={{ value }}
{% endif %}
{% endfor %}
{% endmacro %}

{%- macro section(section_title) %}
{# Generate a section with header, body from caller(), #}
{# and additional options from supervisord_extra_config #}
{% set _ = _managed_sections.append(section_title) %}
[{{ section_title }}]
{{ caller() }}
{{- value_pairs(supervisord_extra_config[section_title] | default({})) }}
{%- endmacro %}

{%- macro build_environment(environment) -%}
{% if environment is mapping %}
  {%- for k, v in environment.items() -%}
    {{- k }}="{{ v | replace('\\', '\\\\') | replace('"', '\\"') }}"
    {%- if not loop.last %},{% endif -%}
  {%- endfor -%}
{% else %}
  {{- environment -}}
{% endif %}
{%- endmacro %}

{% call section("unix_http_server") %}
; (the path to the socket file)
file={{ supervisord_socket }}
{% endcall %}

{% call section("supervisord") %}
; (main log file;default $CWD/supervisord.log)
logfile={{ supervisord_log_file }}
; (supervisord pidfile;default supervisord.pid)
pidfile={{ supervisord_pid_file }}
; ('AUTO' child log dir, default $TEMP)
childlogdir={{ supervisord_log_dir }}
{% if supervisord_environment %}
environment={{ build_environment(supervisord_environment) }}
{% endif %}
{% endcall %}

{% call section("rpcinterface:supervisor") %}
; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
{% endcall %}

{% call section("supervisorctl") %}
; use a unix:// URL  for a unix socket
serverurl=unix://{{ supervisord_socket }}
{% endcall %}

{%- for program in supervisord_programs %}
{% set _program_kind = 'fcgi-program' if program.socket | default(False)
                       else 'program' %}

{% call section(_program_kind ~ ":" ~ program.name) %}
{{ value_pairs(program, ignore=['name', 'environment']) -}}
{% if 'environment' in program %}
environment={{ build_environment(program.environment) }}
{% endif %}
{% endcall %}
{% endfor %}

{%- for event in supervisord_events %}

{% call section("eventlistener" ~ ":" ~ event.name) %}
{{ value_pairs(event, ignore=['name']) -}}
{% endcall %}
{% endfor %}

{%- for section_name in supervisord_extra_config.keys() | difference(_managed_sections) %}

{% call section(section_name) %}{% endcall %}
{% endfor %}